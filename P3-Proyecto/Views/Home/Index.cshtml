@using P3_Proyecto.ViewModels;
@model IEnumerable<MessageViewModel>;

@{
    ViewData["Title"] = "Modal de asistencia";

}


<div class="modal fade" id="userNameModal" tabindex="-1" role="dialog" aria-labelledby="userNameModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userNameModalLabel">Bienvenido, ingrese su nombre de usuario</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="userNameForm">
                    <div class="form-group">
                        <input type="text" class="form-control" id="userNameInput" placeholder="Ingrese su nombre">
                    </div>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </form>
            </div>
        </div>
    </div>
</div>


<button type="button" class="btn btn-primary btn-help" data-toggle="modal" data-target="#helpModal">
    <i class="fas fa-comment"></i>
</button>

<div class="modal fade custom-modal" id="helpModal" tabindex="-1" aria-labelledby="helpModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="helpModalLabel">Asistencia</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="message-container">
                  @* Mensajes  *@
                </div>
            </div>
            <div class="modal-footer d-flex justify-content-between align-items-center">
                <form class="flex-grow-1">
                    <div class="form-group mb-0">
                        <input type="text" class="form-control" id="userMessage" placeholder="Escribe tu mensaje" />
                    </div>
                </form>

                <div class="ml-2">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="button" id="btnEnviar" class="btn btn-primary">Enviar</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>


@section Scripts {
    <script>
        let userName = '';
        let modelData = @Html.Raw(Json.Serialize(Model));
        let connection = new signalR.HubConnectionBuilder().withUrl("/chat").build();

        connection.start().then(() => {
        }).catch((e) => console.error(e));


        connection.on("ReceiveMessage", (message) => {

            let messageContainer = document.querySelector('.message-container');
            let messageWrapper = document.createElement('div');
            messageWrapper.classList.add('message-wrapper', message.usuario === userName ? 'align-right' : 'align-left');

            let messageContent = `
                                        <div class="message ${message.usuario === userName ? 'right' : 'left'}">
                                    <h3>${message.usuario}</h3>
                                    <p>${message.mensaje}</p>
                                    <span class="message-time">${message.hora}</span>
                                </div>
                            `;
            messageWrapper.innerHTML = messageContent;
            messageContainer.appendChild(messageWrapper);
        });

        document.getElementById('btnEnviar').addEventListener('click', () => {
            let mensaje = document.getElementById('userMessage').value;
            addNewMessage(userName, mensaje);
            document.getElementById('userMessage').value = '';
        });


        function addNewMessage(userName, message) {
            connection.invoke('AddMessage', userName, message);
        }

        $(document).ready(function () {
            $('#userNameModal').modal('show');
            $('#userNameForm').submit(function (event) {
                event.preventDefault();
                userName = document.getElementById('userNameInput').value;
                generateMessages(userName, modelData);
                $('#userNameModal').modal('hide');
            });
        });


        function generateMessages(usuario, mensajes) {
            const messageContainer = document.querySelector('.message-container');
            mensajes.forEach(message => {
                const messageWrapper = document.createElement('div');
                messageWrapper.classList.add('message-wrapper');
                messageWrapper.classList.add(message.usuario === usuario ? 'align-right' : 'align-left');

                const messageContent = document.createElement('div');
                messageContent.classList.add('message');
                messageContent.classList.add(message.usuario === usuario ? 'right' : 'left');

                const header = document.createElement('h3');
                header.textContent = message.usuario;

                const paragraph = document.createElement('p');
                paragraph.textContent = message.mensaje;

                const timeSpan = document.createElement('span');
                timeSpan.classList.add('message-time');
                timeSpan.textContent = message.hora;

                messageContent.appendChild(header);
                messageContent.appendChild(paragraph);
                messageContent.appendChild(timeSpan);

                messageWrapper.appendChild(messageContent);

                messageContainer.appendChild(messageWrapper);
            });          
        }
    </script>
}

